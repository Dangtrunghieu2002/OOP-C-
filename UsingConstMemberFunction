#include <iostream>
#include <cstring>
using namespace std;
class Student
{
private:
// data members
char *firstName;
char *lastName;
char middleInitial;
float gpa;
char *currentCourse;
const int studentId; // constant data member
public:
// member function prototypes
Student(); // default constructor
Student(char *, char *, char, float, char *, int);
Student(const Student &); // copy constructor
~Student(); // destructor
void Print()
const
;
const char *GetFirstName()
const { return firstName; }
const char *GetLastName()
const { return lastName; }
char GetMiddleInitial()
const { return middleInitial; }
float GetGpa()
const { return gpa; }
const char *GetCurrentCourse()
const { return currentCourse; }
int GetStudentId()
const { return studentId; }
void SetCurrentCourse(const char *); // prototype only
};

// Definitions for the constructors, destructor, and
// SetCurrentCourse() have been omitted to save space.
// Student::Print() has been revised, so it is shown below:
void Student::Print()
const
{
cout << firstName << " " << middleInitial << ". ";
cout << lastName << " with id: " << studentId;
cout << " and gpa: " << gpa << " is enrolled in: ";
cout << currentCourse << endl;
}
int main()
{
Student s1("Zack", "Moon", 'R', 3.75, "C++", 1378);
cout << s1.GetFirstName() << " " << s1.GetLastName();
cout << " Enrolled in " << s1.GetCurrentCourse() << endl;
s1.SetCurrentCourse("Advanced C++ Programming");
cout << s1.GetFirstName() << " " << s1.GetLastName();
cout << " New course: " << s1.GetCurrentCourse() << endl;
const Student s2("Gabby", "Doone", 'A', 4.0, "C++", 2239);
s2.Print();
// Not allowed, s2 is const
// s2.SetCurrentCourse("Advanced C++ Programming");
return 0;
}
